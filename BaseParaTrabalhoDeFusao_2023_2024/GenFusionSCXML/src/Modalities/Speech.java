/* 
  *   Speech.java generated by speechmod 
 */   

package Modalities; 

import scxmlgen.interfaces.IModality; 

public enum Speech implements IModality{  

	/* 
	CHANGE_COLOR_AZUL("[SPEECH][CHANGE_COLOR][AZUL]",1500),
	CHANGE_COLOR_VERDE("[SPEECH][CHANGE_COLOR][VERDE]",1500),
	CHANGE_COLOR_CINZENTO("[SPEECH][CHANGE_COLOR][CINZENTO]",1500),
	CHANGE_COLOR_VERMELHO("[SPEECH][CHANGE_COLOR][VERMELHO]",1500),
	CHANGE_COLOR_BRANCO("[SPEECH][CHANGE_COLOR][BRANC]",1500),
	CHANGE_COLOR_ROSA("[SPEECH][CHANGE_COLOR][ROSA]",1500),
	CHANGE_COLOR_AMARELO("[SPEECH][CHANGE_COLOR][AMARELO]",1500),
	CHANGE_COLOR_PRETO("[SPEECH][CHANGE_COLOR][PRETO]",1500),
	CHANGE_COLOR_LARANJA("[SPEECH][CHANGE_COLOR][LARANJA]",1500),
	*/

	// ------------------------Complementary------------------------
	SELECIONAR_AREA("[SPEECH][SELECIONAR_AREA]",1500),
	SELECIONAR_CELULAS("[SPEECH][SELECIONAR_CELULAS]",1500),
	ESCREVER_CONTEUDO("[SPEECH][ESCREVER_CONTEUDO]",1500),

	FECHAR("[SPEECH][FECHAR]",1500),
	APAGAR("[SPEECH][APAGAR]",1500),

	PROCURAR_COLUNA("[SPEECH][PROCURAR_COLUNA]", 1500),
	PROCURAR_LINHA("[SPEECH][PROCURAR_LINHA]", 1500),

	//----------------------------Single----------------------------
	ALTERAR_TAMANHO_TEXTO("[SPEECH][ALTERAR_TAMANHO_TEXTO]",1500),
	DIMINUIR_TAMANHO_TEXTO("[SPEECH][DIMINUIR_TAMANHO_TEXTO]",1500),
	ESTILO_TEXTO("[SPEECH][ESTILO_TEXTO]",1500),
	CHANGE_COLOR("[SPEECH][CHANGE_COLOR]",1500),
	DEFINIR_LIMITES("[SPEECH][DEFINIR_LIMITES]",1500),
	SALVAR("[SPEECH][SALVAR]",1500),
	// FECHAR("[SPEECH][FECHAR]",5000),
	AJUDA("[SPEECH][AJUDA]",1500),
	LIMPAR("[SPEECH][LIMPAR]",1500),
	DIRECIONAR("[SPEECH][DIRECIONAR]",1500),
	ORIENTAR("[SPEECH][ORIENTAR]",1500),
	MATEMATICA("[SPEECH][MATEMATICA]",1500),

	PROCURAR("[SPEECH][PROCURAR]",1500),
	SELECIONAR_LINHA("[SPEECH][SELECIONAR_LINHA]",1500),
	SELECIONAR_COLUNA("[SPEECH][SELECIONAR_COLUNA]",1500),

	GREET("[SPEECH][GREET]",1500),
	GOODBYE("[SPEECH][GOODBYE]",1500),
	AFFIRM("[SPEECH][AFFIRM]",1500),
	DENY("[SPEECH][DENY]",1500),

	SELECIONAR_X_AREA("[SPEECH][SELECIONAR_X_AREA]", 1500),

	//---------------------------Reduntante--------------------------
	COPIAR("[SPEECH][COPIAR]",1500),
	COLAR("[SPEECH][COLAR]",1500),
	CORTAR("[SPEECH][CORTAR]",1500),
	// APAGAR("[SPEECH][APAGAR]",5000),
	;


private String event; 
private int timeout;
Speech(String m, int time) {
	event=m;
	timeout=time;
}
@Override
public int getTimeOut(){
	return timeout;
}
@Override
public String getEventName(){
	return event;
}
@Override
public String getEvName(){
	return getModalityName().toLowerCase() +event.toLowerCase();
}

}
